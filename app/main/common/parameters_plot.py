#!/usr/bin/python
# -*- coding: utf-8 -*-
# @Time    : 2020/3/15 0015 11:02
# @Author  : honwaii
# @Email   : honwaii@126.com
# @File    : parameters_plot.py
from datetime import datetime

import matplotlib.pyplot as plt
import matplotlib as mpl


def get_worker():
    mpl.rcParams['font.sans-serif'] = ['SimHei']  # 指定默认字体 SimHei为黑体
    x = [1, 2, 4, 6, 8]
    y = [4009.355, 2567.73948, 2598.2329, 2621.445376, 2629.002552]
    plt.title('线程数对训练时间的影响')
    plt.xlabel('线程数')
    plt.ylabel('训练时长(s)')
    plt.bar(x, y)
    plt.savefig('../../../result/thread-time.png')
    plt.show()


word_sg0 = [('观光', 0.7701963186264038),
            ('观光旅游', 0.7565342783927917),
            ('旅游观光', 0.6864075660705566),
            ('生态旅游', 0.672610342502594),
            ('旅游业', 0.6667374968528748),
            ('休闲', 0.655758261680603),
            ('游客', 0.6555062532424927),
            ('旅游者', 0.6545313000679016),
            ('度假', 0.6400355696678162),
            ('旅行社', 0.6378906965255737)]

word_sg1 = [('旅游观光', 0.8133972883224487),
            ('观光旅游', 0.7958841323852539),
            ('中国国家\n旅游局', 0.7857010364532471),
            ('观光', 0.7728555202484131),
            ('特色旅游', 0.7705907821655273),
            ('游等', 0.7678961753845215),
            ('度假型', 0.7669172883033752),
            ('观光型', 0.7664957642555237),
            ('名镇村', 0.7662153244018555),
            ('生态旅游', 0.7661969661712646)]

word_sg00 = [('废物', 0.7356849908828735),
             ('厨余', 0.7244486808776855),
             ('废弃物', 0.719136118888855),
             ('污水', 0.7059890031814575),
             ('废品', 0.699350118637085),
             ('餐厨', 0.6887111663818359),
             ('固体废物', 0.6819921731948853),
             ('回收', 0.674797773361206),
             ('填埋场', 0.6704457998275757),
             ('垃圾处理', 0.6614660024642944)]
word_sg01 = [('垃圾处理', 0.7982246279716492),
             ('废弃物', 0.7971417903900146),
             ('废物', 0.7706552743911743),
             ('填埋场', 0.7674981355667114),
             ('餐厨', 0.7668242454528809),
             ('回收', 0.7630698680877686),
             ('垃圾场', 0.7549840211868286),
             ('焚化炉', 0.7513853311538696),
             ('随袋', 0.7505370378494263),
             ('污水', 0.7471743822097778)]

iter_5 = [('观光', 0.7846387028694153),
          ('观光旅游', 0.756077766418457),
          ('旅游观光', 0.7000870108604431),
          ('旅游业', 0.6805648803710938),
          ('旅游者', 0.6774634122848511),
          ('度假', 0.6731449365615845),
          ('生态旅游', 0.6698930263519287),
          ('游客', 0.6594637632369995),
          ('休闲', 0.6503071784973145),
          ('旅行社', 0.6385383605957031)]
iter_10 = [('观光', 0.77907794713974),
           ('观光旅游', 0.7628302574157715),
           ('旅游观光', 0.7319360971450806),
           ('生态旅游', 0.6811789274215698),
           ('旅游业', 0.6788410544395447),
           ('特色旅游', 0.6719770431518555),
           ('休闲', 0.6609416007995605),
           ('饭店业', 0.6532835960388184),
           ('旅行社', 0.6487236022949219),
           ('一日游', 0.6440406441688538)]
iter_15 = [('观光旅游', 0.794527530670166),
           ('观光', 0.7918087244033813),
           ('旅游观光', 0.7220475673675537),
           ('特色旅游', 0.7036333680152893),
           ('旅游业', 0.6923995018005371),
           ('生态旅游', 0.6786943674087524),
           ('休闲', 0.6659044027328491),
           ('一日游', 0.6543909311294556),
           ('旅行社', 0.6431625485420227),
           ('旅游者', 0.6377040147781372)]

size_50 = [('观光旅游', 0.8006031513214111),
           ('观光', 0.7821386456489563),
           ('一日游', 0.7580000162124634),
           ('旅游观光', 0.7505146861076355),
           ('游客', 0.7197579145431519),
           ('旅游者', 0.7194125056266785),
           ('周边旅游', 0.7017613649368286),
           ('旅游业', 0.6996198892593384),
           ('背包客', 0.6846278309822083),
           ('生态旅游', 0.6840965747833252)]
size_100 = [('观光', 0.7710238695144653),
            ('观光旅游', 0.757675051689148),
            ('旅游观光', 0.6845395565032959),
            ('一日游', 0.6671046018600464),
            ('旅游者', 0.648142397403717),
            ('度假', 0.646912693977356),
            ('游客', 0.6457107663154602),
            ('生态旅游', 0.6345049142837524),
            ('旅游业', 0.6312227249145508),
            ('购物', 0.628015398979187)]
size_150 = [('观光', 0.7471231818199158),
            ('观光旅游', 0.7423586249351501),
            ('旅游观光', 0.6712479591369629),
            ('一日游', 0.6435454487800598),
            ('生态旅游', 0.6371815204620361),
            ('旅游者', 0.63079833984375),
            ('度假', 0.6307030916213989),
            ('休闲', 0.6292228698730469),
            ('旅游业', 0.6201712489128113),
            ('背包客', 0.6156401038169861)]


def get_sg():
    mpl.rcParams['font.sans-serif'] = ['SimHei']  # 指定默认字体 SimHei为黑体
    plt.figure(figsize=(7.5, 4.8))
    x = [x[0] for x in size_150]
    x.reverse()
    y = [x[1] for x in size_150]
    y.reverse()
    plt.rcParams['savefig.dpi'] = 300
    plt.title('size=150时与"旅游"最相近的词')
    plt.xlabel('相似度')
    plt.ylabel('含义相近的词')
    plt.barh(x, y, )

    plt.savefig('../../../result/旅游-size150.png', dpi=300)
    plt.show()


from app.main.abstract_service import service

datas = [service.get_model_training_data(feature_size) for feature_size in range(50, 500, 50)]


def plot_exceptons(datas):
    size = 0
    for data in datas:
        coefficients = [x['coefficients'] for x in data]
        exceptions = [x['exceptions'] for x in data]
        # variances = [x['variances'] for x in data]
        size += 50
        plt.plot(coefficients, exceptions, label='feature_size=' + str(size), markersize=4, marker='o')
    plt.title('不同feature_size摘要与文章的相似度')
    plt.xlabel('title 与 content的相关性')
    plt.ylabel('similarity exceptions')

    plt.legend()
    plt.savefig('../../../result/exceptions.png', dpi=300)
    # plt.plot(coefficients, variances, label='variances')
    plt.show()


def plot_variances(datas):
    size = 0
    for data in datas:
        coefficients = [x['coefficients'] for x in data]
        variances = [x['variances'] for x in data]
        size += 50
        plt.plot(coefficients, variances, label='feature_size=' + str(size), markersize=4, marker='o')
    plt.title('不同feature_size和相关度下摘要与文章相似度的方差')
    plt.xlabel('title 与 content的相关性')
    plt.ylabel('similarity variances')

    plt.legend()
    plt.savefig('../../../result/variances.png', dpi=300)
    # plt.plot(coefficients, variances, label='variances')
    plt.show()


plot_exceptons(datas)
plot_variances(datas)

# get_sg()
# get_worker()
# print(datetime.now().timestamp())
